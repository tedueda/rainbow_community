name: Deploy to AWS App Runner

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build & Push image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image to ECR (Osaka)
        env:
          REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.TF_VAR_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f backend/Dockerfile backend
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker tag  $REGISTRY/$REPOSITORY:$IMAGE_TAG  $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest

      # ------- ここから Tokyo 用の追加 --------
      - name: Configure AWS credentials (Tokyo)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ap-northeast-1

      - name: Sync image from Osaka ECR to Tokyo ECR
        env:
          ACCOUNT_ID: 192933325498
          REPO: rainbow-community-api
          OSAKA: ap-northeast-3
          TOKYO: ap-northeast-1
          TAG: ${{ github.sha }}
        run: |
          set -eux
          SRC="${ACCOUNT_ID}.dkr.ecr.${OSAKA}.amazonaws.com/${REPO}"
          DST="${ACCOUNT_ID}.dkr.ecr.${TOKYO}.amazonaws.com/${REPO}"

          # 両リージョンに明示ログイン（権限/トークンを確実化）
          aws ecr get-login-password --region ${OSAKA} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${OSAKA}.amazonaws.com
          aws ecr get-login-password --region ${TOKYO} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${TOKYO}.amazonaws.com

          # 大阪で push 済みのイメージを確実に取得（ローカルに無ければ pull）
          docker pull ${SRC}:${TAG}
          docker pull ${SRC}:latest || true

          # 東京向けに付け替え
          docker tag ${SRC}:${TAG} ${DST}:${TAG}
          docker tag ${SRC}:latest ${DST}:latest || true

          # 東京へ push
          docker push ${DST}:${TAG}
          docker push ${DST}:latest || true

      # ------- Tokyo 追加ここまで --------


