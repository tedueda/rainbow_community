name: ECR Push

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: rainbow-community-api

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get ECR repository URL
        id: ecr-url
        run: |
          ECR_URL="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"
          echo "ecr_url=$ECR_URL" >> $GITHUB_OUTPUT
          echo "Using ECR URL: $ECR_URL"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.ecr-url.outputs.ecr_url }}:${{ inputs.tag }}

      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for App Runner auto-deployment (30 seconds)..."
          sleep 30

      - name: Get App Runner URL
        id: app-runner-url
        run: |
          APP_URL="https://7cjpf7nunm.ap-northeast-1.awsapprunner.com"
          echo "app_url=$APP_URL" >> $GITHUB_OUTPUT
          echo "App Runner URL: $APP_URL"

      - name: Health check
        if: steps.app-runner-url.outputs.app_url != ''
        run: |
          APP_URL="${{ steps.app-runner-url.outputs.app_url }}"
          echo "üîç Testing health endpoint: $APP_URL/api/health"
          
          for i in {1..10}; do
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL/api/health" || echo "000")
            if [ "$HTTP_CODE" = "200" ]; then
              echo "‚úÖ Health check passed! (HTTP $HTTP_CODE)"
              curl -s "$APP_URL/api/health" | jq .
              exit 0
            fi
            echo "‚è≥ Attempt $i/10: HTTP $HTTP_CODE - Waiting for service to be ready..."
            sleep 10
          done
          
          echo "‚ùå Health check failed after 10 attempts"
          exit 1

      - name: View logs
        if: always()
        run: |
          echo "üìä To view App Runner logs, run:"
          echo "aws logs tail /aws/apprunner/rainbow-community-api/service --follow --region ${{ env.AWS_REGION }}"
