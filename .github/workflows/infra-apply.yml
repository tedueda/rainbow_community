name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        type: choice
        options:
          - plan
          - apply
        default: 'plan'

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_VERSION: '1.9.6'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform ${{ inputs.action }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        if: inputs.action == 'plan' || inputs.action == 'apply'
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan

      - name: Terraform Output
        if: inputs.action == 'apply'
        run: |
          echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          terraform output -json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          echo ""
          echo "‚úÖ Infrastructure deployed successfully!"
          echo "üìù Update README.md with the following:"
          echo "  - ECR Repository URL: $(terraform output -raw ecr_repository_url)"
          echo "  - App Runner URL: $(terraform output -raw app_runner_service_url)"
          echo "  - CloudWatch Log Group: /aws/apprunner/rainbow-community-api/service"
