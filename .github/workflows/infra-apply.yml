name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        type: choice
        options: [plan, apply]
        default: 'plan'

env:
  # すべてリポジトリVariables/Secrets由来に統一
  AWS_REGION: ${{ vars.AWS_REGION }}          # 例: ap-northeast-3
  TF_VERSION: "1.9.6"

  # ---- Terraform へ渡す変数（TF_VAR_*）----
  TF_VAR_app_runner_service_name: ${{ secrets.TF_VAR_APP_RUNNER_SERVICE_NAME }}
  TF_VAR_vpc_id: ${{ vars.TF_VAR_VPC_ID }}
  TF_VAR_private_subnet_ids: ${{ vars.TF_VAR_PRIVATE_SUBNET_IDS }}        # JSON配列で保存済み
  TF_VAR_rds_security_group_id: ${{ vars.TF_VAR_RDS_SECURITY_GROUP_ID }}
  TF_VAR_rds_endpoint: ${{ vars.TF_VAR_RDS_ENDPOINT }}                    # ホスト名のみ
  TF_VAR_db_app_user: ${{ secrets.TF_VAR_DB_APP_USER }}
  TF_VAR_db_app_password: ${{ secrets.TF_VAR_DB_APP_PASSWORD }}
  TF_VAR_database_name: ${{ vars.TF_VAR_DATABASE_NAME }}
  TF_VAR_ecr_repo_name: ${{ vars.TF_VAR_ECR_REPO_NAME }}
  TF_VAR_github_repo: ${{ vars.TF_VAR_GITHUB_REPO }}
  TF_VAR_github_oidc_role_arn: ${{ vars.TF_VAR_GITHUB_OIDC_ROLE_ARN }}
  TF_VAR_aws_region: ${{ vars.TF_VAR_AWS_REGION }}                        # ap-northeast-3 と一致

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform ${{ inputs.action }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        if: ${{ inputs.action == 'plan' || inputs.action == 'apply' }}
        run: terraform plan -out=tfplan -input=false

      - name: Terraform Apply
        if: ${{ inputs.action == 'apply' }}
        run: terraform apply -auto-approve -input=false tfplan

      - name: Terraform Output (summary)
        if: ${{ inputs.action == 'apply' }}
        run: |
          {
            echo "## Terraform Outputs"
            echo '```json'
            terraform output -json || echo '{}'
            echo '```'
            echo ""
            echo "✅ Infrastructure deployed successfully!"
            echo "📝 Update README.md with the following (if defined):"
            echo "  - ECR Repository URL: $(terraform output -raw ecr_repository_url 2>/dev/null || echo '(not set)')"
            echo "  - App Runner URL: $(terraform output -raw app_runner_service_url 2>/dev/null || echo '(not set)')"
            echo "  - CloudWatch Log Group: /aws/apprunner/rainbow-community-api/service"
          } >> "$GITHUB_STEP_SUMMARY"
